---
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/Container.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Pagination from "../../components/Pagination.astro";
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const project = (await getCollection('project'))
  	.sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()).reverse();
  	
	// Return a paginated collection of paths for all posts
  	return paginate(project, { pageSize: 4 });
}

	const posts_project_featured = (await getCollection('project'))
	.filter(post => post.data.status == 'featured') // Filter out active posts
	.sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());

// If set up correctly, The page prop now has everything that
// you need to render a single page (see next section).
type Props = { page: Page<CollectionEntry<'blog'>> };

const { page } = Astro.props;
const project = page.data;
---

<Layout title="t2del | Project" meta_description="List of projects i have worked and still working on" body_class="home" image="favicon.ico">
	<section>
		<Container className="container-blog">
			<h1 class="notshow fromleft"> <span class="text-gradient">Projects</span></h1>
			<ul role="list" class="link-card-grid featured">
				{posts_project_featured.map((post) => (
						<li class="notshow blur portfolio-list">
							<a href={`/project/${post.slug}/`}>
								<img src={post.data.heroImage} width={300} height={200} alt={post.data.title}>
								<h4 class="title">{post.data.title}</h4>
							</a>
						</li>
				))}
			</ul>
			<ul role="list" class="link-card-grid grid-3">
				{
					project.map((post) => ( 					
						<li class="notshow fromtop">
							<a href={`/project/${post.slug}/`}>
								<img  src={post.data.heroImage} alt={post.data.imgalt} title={post.data.imgalt} />
								<h4 class="title">{post.data.title}</h4>
								<p class="date">
									<FormattedDate date={post.data.pubDate} />
								</p>
							</a>							
						</li>
					))
				}
			</ul>
			<Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
		</Container>			
	</section>
</Layout>